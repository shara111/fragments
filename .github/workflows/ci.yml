# .github/workflows/ci.yml

# Continuous Integration (CI) Workflow
name: ci

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install node dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  dockerfile-lint:
    name: Dockerfile Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Lint Dockerfile using Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies and run tests
        run: npm install-ci-test

  integration-tests:
    name: Integration Tests
    needs: [unit-tests] # Ensure unit tests pass first
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install node dependencies
        # Install both production and dev dependencies
        run: npm install

      - name: Build Containers
        run: docker compose up -d

      - name: Setup Local AWS Resources
        # NOTE: Make this file executable before committing:
        # chmod +x ./scripts/local-aws-setup.sh
        run: ./scripts/local-aws-setup.sh

      - name: Run Integration Tests
        run: npm run test:integration

  docker-hub:
    name: Build and Push to Docker Hub
    needs: [lint, dockerfile-lint, unit-tests, integration-tests]  # Ensure all tests pass first
    runs-on: ubuntu-latest
    steps:
      # Set up buildx for optimal Docker Builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to Docker Hub using GitHub Secrets
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Docker image to Docker Hub
      - name: Build and push Docker image
        env:
          DOCKERHUB_REPO: shara1/fragments
          SHA_TAG: sha-${{ github.sha }}
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            ${{ env.DOCKERHUB_REPO }}:${{ env.SHA_TAG }}
            ${{ env.DOCKERHUB_REPO }}:main
            ${{ env.DOCKERHUB_REPO }}:latest
